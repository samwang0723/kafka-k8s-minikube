#
# Kafka cluster deployment helm-chart values
#

## Enabling the external LoadBalancer
enableLoadBalancer: true

## The StatefulSet install 3 pods by default
replicas: 3

## Maximum history record for deployment
revisionHistoryLimit: 10

## Kafka image repository
images:
  name: confluentinc/cp-enterprise-kafka
  tag: 5.3.1

## Specify a Zookeeper imagePullPolicy
## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
imagePullPolicy: IfNotPresent

## Configure resource requests and limits
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

## Optional container security context
securityContext: {}

## StatefulSet update strategy
updateStrategy: RollingUpdate

## Start and stop pods in parallel or OrderedReady (one-by-one) - Cannot change after release
podManagementPolicy: OrderedReady

## Secrets passes to pods
secrets: 
  name: kafka-ssl
  mode: 420
  mountPath: /var/private/ssl
  readOnly: true

## Service account name
serviceAccountName: tiller

affinity: {}

nodeSelector: {}

## Readiness probe config
readinessProbe:
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 3

## Node labels for pod assignment
nodeSelector: {}

## Period to wait for broker graceful shutdown (sigterm) before pod is killed (sigkill)
## ref: https://kubernetes-v1-4.github.io/docs/user-guide/production-pods/#lifecycle-hooks-and-termination-notice
## ref: https://kafka.apache.org/10/documentation.html#brokerconfigs controlled.shutdown.*
terminationGracePeriodSeconds: 60

## Tolerations for nodes that have taints on them.
## Useful if you want to dedicate nodes to just run kafka
## https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

externalIP: 192.168.99.102

## Service ports
ports:
  internal: 9092
  external: 9093
  exposed: 9000

## Kafka JVM Heap Option
heapOptions: "-Xms1G -Xmx1G"

## Persistence configuration. Specify if and how to persist data to a persistent volume.
persistence:
  enabled: true
  ## The size of the PersistentVolume to allocate to each Kafka Pod in the StatefulSet. For
  ## production servers this number should likely be much larger.
  ##
  size: "1Gi"
  ## The location within the Kafka container where the PV will mount its storage and Kafka will
  ## store its logs.
  ##
  disksPerBroker: 1


## The replication factor for the offsets topic (set higher to ensure availability). 
## Internal topic creation will fail until the cluster size meets this replication factor requirement.
## If desired broker count is lower, will use the broker count
offsetsReplication: 3

## Number of replicas in the metric topic. It must not be higher than the number of brokers in the Kafka cluster.
## If desired broker count is lower, will use the broker count
metricsReplication: 3
## Kafka Server properties
## ref: https://kafka.apache.org/documentation/#configuration
configurationOverrides:
  "offsets.topic.replication.factor": 3
  "default.replication.factor": 3
  "min.insync.replicas": 2
  ## Options required for external access via NodePort
  ## ref:
  ## - http://kafka.apache.org/documentation/#security_configbroker
  ## - https://cwiki.apache.org/confluence/display/KAFKA/KIP-103%3A+Separation+of+Internal+and+External+traffic
  ##
  ## Advertised listeners will use the firstListenerPort value as it's default unless overridden here.
  ## Setting "advertised.listeners" here appends to "PLAINTEXT://${POD_IP}:9092,"
  "advertised.listeners": |-
    INTERNAL://:9092,EXTERNAL://:9093
  "listener.security.protocol.map": |-
    INTERNAL:PLAINTEXT,EXTERNAL:SSL
  "inter.broker.listener.name": "INTERNAL"
  "ssl.keystore.location": "/var/private/ssl/kafka.server.keystore.jks"
  "ssl.keystore.password": "test1234"
  "ssl.truststore.location": "/var/private/ssl/kafka.server.truststore.jks"
  "ssl.truststore.password": "test1234"
  "ssl.key.password": "test1234"
  "ssl.client.auth": "required"
  #"zookeeper.connect": |-
  #  zookeeper-0.zookeeper-headless:2181,zookeeper-1.zookeeper-headless:2181,zookeeper-2.zookeeper-headless:2181
  "log4j.root.loglevel": "DEBUG"
  "ssl.endpoint.identification.algorithm": ""
## Additional env variables
customEnv: 
  # KAFKA_METRIC_REPORTERS: "io.confluent.metrics.reporter.ConfluentMetricsReporter"
  # CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: "localhost:9092"

## Topic creation and configuration.
## The job will be run on a deployment only when the config has been changed.
## - If 'partitions' and 'replicationFactor' are specified we create the topic (with --if-not-exists.)
## - If 'partitions', 'replicationFactor' and 'reassignPartitions' are specified we reassign the partitions to
## increase the replication factor of an existing topic.
## - If 'partitions' is specified we 'alter' the number of partitions. This will
## silently and safely fail if the new setting isnâ€™t strictly larger than the old (i.e. a NOOP.) Do be aware of the
## implications for keyed topics (ref: https://docs.confluent.io/current/kafka/post-deployment.html#admin-operations)
## - If 'defaultConfig' is specified it's deleted from the topic configuration. If it isn't present,
## it will silently and safely fail.
## - If 'config' is specified it's added to the topic configuration.
##
## Note: To increase the 'replicationFactor' of a topic, 'reassignPartitions' must be set to true (see above).
##
topics: []
  # - name: myExistingTopicConfig
  #   config: "cleanup.policy=compact,delete.retention.ms=604800000"
  # - name: myExistingTopicReassignPartitions
  #   partitions: 8
  #   replicationFactor: 5
  #   reassignPartitions: true
  # - name: myExistingTopicPartitions
  #   partitions: 8
  # - name: myNewTopicWithConfig
  #   partitions: 8
  #   replicationFactor: 3
  #   defaultConfig: "segment.bytes,segment.ms"
  #   config: "cleanup.policy=compact,delete.retention.ms=604800000"
  # - name: myAclTopicPartitions
  #   partitions: 8
  #   acls:
  #     - user: read
  #       operations: [ Read ]
  #     - user: read_and_write
  #       operations:
  #         - Read
  #         - Write
  #     - user: all
  #       operations: [ All ]

## ------------------------------------------------------
## Zookeeper
## ------------------------------------------------------
zookeeper:
  ## If true, install the cp-zookeeper chart alongside cp-kafka
  ## ref: ../zookeeper
  enabled: true
